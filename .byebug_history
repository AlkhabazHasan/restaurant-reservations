c
friendship.friend.reviews.where(:restaurant_id => restaurant_id).average(:rating).to_f
friendship.friend.reviews.where(:restaurant_id => restaurant_id).average(:rating)
friendship.friend.reviews.where(:restaurant_id => restaurant_id)
friendship.friend.reviews
friendship.friend
friendship
c
n
params[:rating]
params
c
params
c
params
c
self[:reservation_id]
self
self.reservation
self[:reservation]
c
exit
date_range.cover?(time.to_time)
time.to_time
reservation.date.type
reservation.date.class?
time.to_datetime.localtime
time.to_date
time.to_datetime
time.to_datetie
time
reservation.date.localtime
(reservation.date..reservation.date + reservation.duration.hours).cover?(time.to_datetime)
reservation.date..reservation.date + reservation.duration.hours.cover?(time.to_datetime)
reservation.date..reservation.date + reservation.duration.hours
reservation.date
time.to_datetime
time.to_datetime.localtime
time.localtime
DateTime.parse(time).localtime
DateTime.parse(time)
date_range.cover?(DateTime.parse(time))
date_range.cover?(time.localtime)
date_range.cover?(time.to_datetime)
time.to_datetime
time
date_range
date_range.cover?(time)
c
date_range.cover?(Time.now)
c
date_range.cover?(Time.now)
c
date_range.cover?(Time.now)
c
Time.now
date_range
date_range.cover?(Time.now)
n
date_range.cover?(Time.now)
Time.now
date_range
c
def protect_from_forgery? { false }
def protect_from_forgery?
def protect_from_forgery? false end
protect_from_forgery?
c
self.date
c
Application.time_zone
c
Time.now
self.date
c
self.date
c
Time.now
time.now
self.date
c
self.date
now
c
Time.now
date_range
Time.now
date_range.cover?(Time.now.to_datetime)
c
date_range.cover?(Time.now.to_datetime)
c
date_range.cover?(Time.now.to_datetime)
c
date_range.cover?(Time.now.to_datetime)
c
date_range.cover?(Time.now.to_datetime)
n
self.date.in_time_zone("Belgrade").to_datetime
self.date.in_time_zone("Belgrade").to_date_time
self.date.in_time_zone("Belgrade")
c
self.date.in_time_zone("Belgrade")
self.date.in_time_zone
self.date
Time.now.in_time_zone("Belgrade").now.to_datetime
Time.in_time_zone("Belgrade").now.to_datetime
c
self.date
Time.now.to_datetime
date_range.cover?(Time.now.to_datetime)
date_range
c
date_range.cover?(Time.now.to_datetime)
Time.now.to_datetime
self.date.to_datetime
date_range
c
self.date.to_datetime
Time.now
Time.now.to_datetime
Time.now.to_date_time
Time.now.to_date
self.date
Time.now.to_i
date_range
date_range.cover?(Time.now.to_i)
date_range = self.date.to_i..(self.date + self.duration.hours).to_i
self.date.to_i
Time.now.to_i
self.date
self.date.localtime
self.date
Time.now - 1.hours
Time.now.localtime
Time.now
date_range
c
self.date.to_s
DateTime.parse(Time.now)
Time.now.utc
Time.now
date_range.cover?(Time.now.utc)
date_range.cover?(Time.now)
date_range = self.date..self.date + self.duration.hours
self.date
date_range
c
date_range
c
date_range
c
date_range
c
date_range
 date_range.cover?(Time.now)
c
date_range
c
 date_range.cover?(Time.now)
c
 date_range.cover?(Time.now)
c
 date_range.cover?(Time.now)
c
 date_range.cover?(Time.now)
c
 date_range.cover?(Time.now)
n
date_range
date_range.cover?(Time.now)
c
n
date_range.cover?(Time.now)
c
n
date_range.cover?(Time.now)
c
n
c
n
c
n
date_range.cover?(Time.now)
c
date_range.cover?(Time.now)
c
n
date_range.cover?(Time.now)
c
date_range.cover?(Time.now)
date_range
c
@friends_info
n
params
c
n
@friends_info
@friend_info
n
params
c
n
c
n
c
n
c
n
c
n
c
n
c
n
c
n
friends
n
c
friends
n
c
friends
n
c
n
c
params
c
n
seat_info
c
date_range.cover?("2016-02-21 17:48:12")
date_range.cover?("2016-02-21 17-48-12")
date_range.cover?(2016-02-21 17-48-12)
date_range
DateTime.parse(time + "+0100")
DateTime.parse(time)
Date.parse(time)
Time.now
date_range.cover?(time.localtime)
date_range.cover?(time.to_date)
date_range.cover?(time.date)
date_range.cover?(time)
time
date_range
c
time
date_range.cover?(time)
date_range
c
time
reservation.date.localtime
DateTime.parse(time)
Date.parse(time)
